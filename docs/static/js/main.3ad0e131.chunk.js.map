{"version":3,"sources":["brushes/resources/logo.webp","components/Canvas.tsx","painting/Vector.ts","brushes/Brush.ts","painting/colours.ts","brushes/PathBrush.ts","painting/Painter.ts","painting/CanvasWrapper.ts","components/BrushButton.tsx","brushes/CappedPathBrush.ts","brushes/DotBrush.ts","brushes/StampBrush.ts","components/BrushButtons.tsx","App.tsx","index.tsx"],"names":["module","exports","CanvasContainer","styled","div","StyledCanvas","canvas","Canvas","props","id","Vector","x","y","v","this","Math","atan2","sqrt","distanceToSquared","dx","dy","log","s","multiplyScalar","lengthSq","length","divideScalar","center","angle","cos","sin","normalize","v1","v2","angleBetween","PI","linePoint","lineDirection","point","perpendicularVector","clone","sub","dot","Brush","name","pos","newPos","delta","colours","background","red","yellow","green","black","PathBrush","currentLine","_","push","drawPath","Painter","initialBrush","brush","interact","canvasElement","on","event","onTap","eventToPos","draggable","onstart","onDragStart","onmove","onDragMove","eventToDelta","onend","onDragEnd","cursorChecker","b","clientX","clientY","CanvasWrapper","canvasID","_canvasElement","ctx","size","zeroVector","dpr","window","devicePixelRatio","document","getElementById","getContext","Error","addEventListener","resizeCanvas","canvasSize","getBoundingClientRect","width","height","fillBackground","fillStyle","fillRect","colour","canvasPos","screenToCanvas","path","canvasPath","map","strokeStyle","lineWidth","beginPath","moveTo","i","lineTo","stroke","radius","arc","fill","image","drawImage","rect","left","top","StyledButton","button","BrushButton","onClick","setBrush","CappedPathBrush","fillCircle","DotBrush","distanceTo","StampBrush","img","Image","onload","src","logo","Buttons","BrushButtons","AppContainer","App","useState","painter","setPainter","useEffect","canvasWrapper","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3ad0e131.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d017bff3.webp\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CanvasContainer = styled.div`\n  flex: 1;\n  padding: 30px;\n  min-height: 0;\n`;\n\nconst StyledCanvas = styled.canvas`\n  border-radius: 8px;\n  touch-action: none;\n  width: 100%;\n  height: 100%;\n`;\n\ninterface Props {\n  id: string;\n}\n\nexport default function Canvas(props: Props) {\n  return (\n    <CanvasContainer>\n      <StyledCanvas id={props.id} />\n    </CanvasContainer>\n  );\n}\n","import * as log from \"loglevel\";\n\nexport default class Vector {\n  constructor(public x: number, public y: number) {}\n\n  static zeroVector(): Vector {\n    return new Vector(0, 0);\n  }\n\n  static fromScalar(s: number): Vector {\n    return new Vector(s, s);\n  }\n\n  /**\n   * -pi to pi\n   */\n  static angleBetween(v1: Vector, v2: Vector): number {\n    // -2pi to 2pi\n    let angleBetween = v1.angle() - v2.angle();\n    if (angleBetween > Math.PI) {\n      angleBetween -= 2 * Math.PI;\n    } else if (angleBetween <= -Math.PI) {\n      angleBetween += 2 * Math.PI;\n    }\n    return angleBetween;\n  }\n\n  /**\n   * Tests whether a point lies to the left of a line\n   * @param  {Vector} linePoint     Point on the line\n   * @param  {Vector} lineDirection\n   * @param  {Vector} point\n   * @return {Vector}               true if left, false otherwise\n   */\n  static isLeft(\n    linePoint: Vector,\n    lineDirection: Vector,\n    point: Vector\n  ): boolean {\n    const perpendicularVector = new Vector(lineDirection.y, -lineDirection.x);\n    return point.clone().sub(linePoint).dot(perpendicularVector) < 0;\n  }\n\n  add(v: Vector): Vector {\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  }\n\n  /**\n   * Angle in radians to positive x-axis between -pi and pi\n   */\n  angle(): number {\n    return Math.atan2(this.y, this.x);\n  }\n\n  clone(): Vector {\n    return new Vector(this.x, this.y);\n  }\n\n  copy(v: Vector): Vector {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  }\n\n  cross(v: Vector): number {\n    return this.x * v.y - this.y * v.x;\n  }\n\n  distanceTo(v: Vector): number {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n\n  distanceToSquared(v: Vector): number {\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n    return dx * dx + dy * dy;\n  }\n\n  divide(v: Vector): Vector {\n    if (v.x === 0 || v.y === 0) {\n      log.warn(\"Division by zero\");\n      return this;\n    }\n\n    this.x /= v.x;\n    this.y /= v.y;\n    return this;\n  }\n\n  divideScalar(s: number): Vector {\n    if (s === 0) {\n      log.warn(\"Division by zero\");\n      return this;\n    }\n    return this.multiplyScalar(1 / s);\n  }\n\n  dot(v: Vector): number {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  equals(v: Vector): boolean {\n    return v.x === this.x && v.y === this.y;\n  }\n\n  length(): number {\n    return Math.sqrt(this.lengthSq());\n  }\n\n  lengthSq(): number {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  multiply(v: Vector): Vector {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  }\n\n  multiplyScalar(s: number): Vector {\n    this.x *= s;\n    this.y *= s;\n    return this;\n  }\n\n  negate(): Vector {\n    return this.multiplyScalar(-1);\n  }\n\n  normalize(): Vector {\n    const l = this.length();\n    if (l === 0) {\n      log.warn(\"Zero Vector\");\n      return this;\n    }\n\n    return this.divideScalar(this.length());\n  }\n\n  /**\n   * Angle in radians\n   */\n  rotateAround(center: Vector, angle: number): Vector {\n    const cos = Math.cos(angle);\n    const sin = Math.sin(angle);\n\n    const x = this.x - center.x;\n    const y = this.y - center.y;\n\n    this.x = x * cos - y * sin + center.x;\n    this.y = x * sin + y * cos + center.y;\n    return this;\n  }\n\n  set(v: Vector): Vector {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  }\n\n  setX(x: number): Vector {\n    this.x = x;\n    return this;\n  }\n\n  setY(y: number): Vector {\n    this.y = y;\n    return this;\n  }\n\n  setLength(length: number): Vector {\n    return this.normalize().multiplyScalar(length);\n  }\n\n  sub(v: Vector): Vector {\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  }\n}\n","import CanvasWrapper from \"../painting/CanvasWrapper\";\nimport Vector from \"../painting/Vector\";\n\nexport default abstract class Brush {\n  abstract name: string;\n\n  onTap(canvas: CanvasWrapper, pos: Vector): void {}\n  onDragStart(canvas: CanvasWrapper, newPos: Vector): void {}\n  onDragMove(canvas: CanvasWrapper, newPos: Vector, delta: Vector): void {}\n  onDragEnd(canvas: CanvasWrapper, newPos: Vector): void {}\n  onHoverMove(canvas: CanvasWrapper, newPos: Vector, delta: Vector): void {}\n}\n","const colours = {\n  background: \"rgb(221, 223, 228)\",\n  red: \"rgb(210, 114, 119)\",\n  yellow: \"rgb(224, 192, 132)\",\n  green: \"rgb(161, 193, 129)\",\n  black: \"rgb(41, 44, 51)\",\n};\n\nexport default colours;\n","import Brush from \"./Brush\";\nimport Vector from \"../painting/Vector\";\nimport CanvasWrapper from \"../painting/CanvasWrapper\";\nimport colours from \"../painting/colours\";\n\nexport default class PathBrush extends Brush {\n  public name = \"Path Brush\";\n  protected currentLine: Vector[] = [];\n\n  onDragMove(canvas: CanvasWrapper, newPos: Vector, _: Vector) {\n    this.currentLine.push(newPos);\n    canvas.drawPath(this.currentLine, 15, colours.black);\n  }\n\n  onDragEnd(canvas: CanvasWrapper, _: Vector) {\n    this.currentLine = [];\n  }\n}\n","import Brush from \"../brushes/Brush\";\nimport CanvasWrapper from \"./CanvasWrapper\";\nimport interact from \"interactjs\";\nimport Vector from \"./Vector\";\nimport PathBrush from \"../brushes/PathBrush\";\n\ntype InteractEvent = {\n  clientX: number;\n  clientY: number;\n  dx: number;\n  dy: number;\n};\n\nexport default class Painter {\n  private brush: Brush | null = null;\n\n  constructor(canvas: CanvasWrapper, initialBrush?: Brush) {\n    this.brush = initialBrush || new PathBrush();\n    interact(canvas.canvasElement)\n      .on(\"tap\", (event: InteractEvent) =>\n        this.brush?.onTap(canvas, this.eventToPos(event))\n      )\n      .draggable({\n        onstart: (event: InteractEvent) =>\n          this.brush?.onDragStart(canvas, this.eventToPos(event)),\n        onmove: (event: InteractEvent) =>\n          this.brush?.onDragMove(\n            canvas,\n            this.eventToPos(event),\n            this.eventToDelta(event)\n          ),\n        onend: (event: InteractEvent) =>\n          this.brush?.onDragEnd(canvas, this.eventToPos(event)),\n        cursorChecker: () => \"crosshair\",\n      });\n  }\n\n  setBrush(b: Brush) {\n    this.brush = b;\n  }\n\n  private eventToPos(event: InteractEvent): Vector {\n    return new Vector(event.clientX, event.clientY);\n  }\n\n  private eventToDelta(event: InteractEvent): Vector {\n    return new Vector(event.dx, event.dy);\n  }\n}\n","import Vector from \"./Vector\";\nimport colours from \"./colours\";\n\nexport default class CanvasWrapper {\n  private _canvasElement: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n  private size: Vector = Vector.zeroVector();\n  private dpr = window.devicePixelRatio || 1;\n\n  constructor(canvasID: string) {\n    this._canvasElement = document.getElementById(\n      canvasID\n    ) as HTMLCanvasElement;\n\n    const ctx = this._canvasElement?.getContext(\"2d\");\n    if (!ctx) throw new Error(\"Canvas element does not exist\");\n    this.ctx = ctx;\n\n    window.addEventListener(\"resize\", () => this.resizeCanvas(), true);\n\n    this.resizeCanvas();\n  }\n\n  get canvasElement(): HTMLCanvasElement {\n    return this._canvasElement;\n  }\n\n  resizeCanvas(): void {\n    const canvasSize = this._canvasElement.getBoundingClientRect();\n    this._canvasElement.width = this.size.x = canvasSize.width * this.dpr;\n    this._canvasElement.height = this.size.y = canvasSize.height * this.dpr;\n    this.fillBackground();\n  }\n\n  fillBackground(): void {\n    this.ctx.fillStyle = colours.background;\n    this.ctx.fillRect(0, 0, this.size.x, this.size.y);\n  }\n\n  fillRect(pos: Vector, width: number, height: number, colour: string): void {\n    this.ctx.fillStyle = colour;\n    const canvasPos = this.screenToCanvas(pos);\n    this.ctx.fillRect(canvasPos.x, canvasPos.y, width, height);\n  }\n\n  fillRectCentred(pos: Vector, width: number, height: number): void {\n    this.ctx.fillStyle = colours.red;\n    const canvasPos = this.screenToCanvas(pos);\n    this.ctx.fillRect(\n      canvasPos.x - width / 2,\n      canvasPos.y - height / 2,\n      width,\n      height\n    );\n  }\n\n  drawPath(path: Vector[], width: number, colour: string): void {\n    const canvasPath = path.map((v) => this.screenToCanvas(v));\n\n    this.ctx.strokeStyle = colour;\n    this.ctx.lineWidth = width;\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(canvasPath[0].x, canvasPath[0].y);\n\n    for (let i = 1; i < canvasPath.length; i++) {\n      this.ctx.lineTo(canvasPath[i].x, canvasPath[i].y);\n    }\n\n    this.ctx.stroke();\n  }\n\n  fillCircle(pos: Vector, radius: number, colour: string): void {\n    const canvasPos = this.screenToCanvas(pos);\n    this.ctx.fillStyle = colour;\n    this.ctx.beginPath();\n    this.ctx.arc(canvasPos.x, canvasPos.y, radius, 0, Math.PI * 2); //, startAngle, endAngle, anticlockwise);\n    this.ctx.fill();\n  }\n\n  drawImage(image: HTMLImageElement, pos: Vector): void {\n    const canvasPos = this.screenToCanvas(pos);\n    this.ctx.drawImage(\n      image,\n      canvasPos.x - image.width / 2,\n      canvasPos.y - image.height / 2\n    );\n  }\n\n  private screenToCanvas(pos: Vector): Vector {\n    var rect = this._canvasElement.getBoundingClientRect();\n    return new Vector(pos.x - rect.left, pos.y - rect.top).multiplyScalar(\n      this.dpr\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Brush from \"../brushes/Brush\";\n\nconst StyledButton = styled.button`\n  display: inline-block;\n  border: none;\n  padding: 1rem 2rem;\n  margin: 30px 5px 0;\n  border-radius: 5px;\n  text-decoration: none;\n  background: #0069ed;\n  color: #ffffff;\n  font-family: sans-serif;\n  font-size: 1rem;\n  cursor: pointer;\n  text-align: center;\n  transition: background 250ms ease-in-out, transform 150ms ease;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n\n  :hover,\n  :focus {\n    background: #0053ba;\n  }\n\n  :focus {\n    outline: 1px solid #fff;\n    outline-offset: -4px;\n  }\n\n  :active {\n    transform: scale(0.99);\n  }\n`;\n\ninterface Props {\n  brush: Brush;\n  setBrush: (brush: Brush) => void;\n}\n\nexport default function BrushButton(props: Props) {\n  const name = props.brush.name;\n  return (\n    <StyledButton onClick={() => props.setBrush(props.brush)}>\n      {name}\n    </StyledButton>\n  );\n}\n","import Vector from \"../painting/Vector\";\nimport CanvasWrapper from \"../painting/CanvasWrapper\";\nimport PathBrush from \"./PathBrush\";\nimport colours from \"../painting/colours\";\n\nexport default class CappedPathBrush extends PathBrush {\n  public name = \"Capped Path Brush\";\n\n  onDragStart(canvas: CanvasWrapper, pos: Vector) {\n    super.onDragStart(canvas, pos);\n    canvas.fillCircle(pos, 20, colours.black);\n  }\n\n  onDragEnd(canvas: CanvasWrapper, pos: Vector) {\n    super.onDragEnd(canvas, pos);\n    canvas.fillCircle(pos, 30, colours.yellow);\n  }\n}\n","import Brush from \"./Brush\";\nimport Vector from \"../painting/Vector\";\nimport CanvasWrapper from \"../painting/CanvasWrapper\";\nimport colours from \"../painting/colours\";\n\nexport default class DotBrush extends Brush {\n  public name = \"Dot Brush\";\n  protected currentLine: Vector[] = [];\n\n  onDragStart(_: CanvasWrapper, pos: Vector) {\n    this.currentLine.push(pos);\n  }\n\n  onDragMove(canvas: CanvasWrapper, newPos: Vector, _: Vector) {\n    if (this.currentLine[this.currentLine.length - 1].distanceTo(newPos) > 30) {\n      this.currentLine.push(newPos);\n      canvas.fillCircle(newPos, 20, colours.red);\n    }\n  }\n\n  onDragEnd(canvas: CanvasWrapper, _: Vector) {\n    this.currentLine = [];\n  }\n}\n","import Brush from \"./Brush\";\nimport Vector from \"../painting/Vector\";\nimport CanvasWrapper from \"../painting/CanvasWrapper\";\nimport logo from \"./resources/logo.webp\";\n\nexport default class StampBrush extends Brush {\n  public name = \"Stamp Brush\";\n  private img: HTMLImageElement | undefined;\n\n  constructor() {\n    super();\n    const image = new Image();\n    image.onload = () => (this.img = image);\n    image.src = logo;\n  }\n\n  onTap(canvas: CanvasWrapper, pos: Vector): void {\n    if (this.img) {\n      canvas.drawImage(this.img, pos); // Draw when image has loaded\n    }\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Brush from \"../brushes/Brush\";\nimport PathBrush from \"../brushes/PathBrush\";\nimport BrushButton from \"./BrushButton\";\nimport CappedPathBrush from \"../brushes/CappedPathBrush\";\nimport DotBrush from \"../brushes/DotBrush\";\nimport StampBrush from \"../brushes/StampBrush\";\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\ninterface Props {\n  setBrush: (b: Brush) => void;\n}\n\nexport default function BrushButtons(props: Props) {\n  return (\n    <Buttons>\n      <BrushButton\n        brush={new PathBrush()}\n        setBrush={props.setBrush}\n      ></BrushButton>\n      <BrushButton\n        brush={new CappedPathBrush()}\n        setBrush={props.setBrush}\n      ></BrushButton>\n      <BrushButton\n        brush={new DotBrush()}\n        setBrush={props.setBrush}\n      ></BrushButton>\n      <BrushButton\n        brush={new StampBrush()}\n        setBrush={props.setBrush}\n      ></BrushButton>\n    </Buttons>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Canvas from \"./components/Canvas\";\nimport Painter from \"./painting/Painter\";\nimport CanvasWrapper from \"./painting/CanvasWrapper\";\nimport Brush from \"./brushes/Brush\";\nimport BrushButtons from \"./components/BrushButtons\";\n\nconst AppContainer = styled.div`\n  background-color: rgb(41, 44, 51);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction App() {\n  const canvasID = \"paint-canvas\";\n\n  const [painter, setPainter] = useState<Painter>();\n  useEffect(() => {\n    const canvasWrapper = new CanvasWrapper(canvasID);\n    setPainter(new Painter(canvasWrapper));\n  }, []);\n\n  return (\n    <AppContainer>\n      <BrushButtons setBrush={(b: Brush) => painter?.setBrush(b)} />\n      <Canvas id={canvasID} />\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}